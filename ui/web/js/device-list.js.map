{"version":3,"file":"device-list.js","sourceRoot":"","sources":["../../ts/device-list.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EACL,eAAe,GAIhB,MAAM,sBAAsB,CAAC;AAGvB,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAAnC;;QAEL,eAAU,GAAa,EAAE,CAAC;IAgH5B,CAAC;IA9GC,iBAAiB;QACf,2BAA2B;QAC3B,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,oBAAoB;QAClB,2BAA2B;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAmCD,QAAQ,CAAC,IAAoB;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,MAAM;QACJ,MAAM,OAAO,GAAG;YACd,KAAK;YACL,QAAQ;YACR,QAAQ;YACR,OAAO;YACP,MAAM;YACN,QAAQ;YACR,QAAQ;SACT,CAAC;QAEF,+BAA+B;QAC/B,OAAO,IAAI,CAAA;QACP,IAAI,CAAC,UAAU,CAAC,GAAG,CACnB,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,CAAA;;;gBAGb,MAAM,CAAC,OAAO,KAAK,IAAI;YACvB,CAAC,CAAC,IAAI,CAAA;2BACK,MAAM,CAAC,YAAY;8BAChB,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;;;;uBAIpC,MAAM,CAAC,IAAI,GAAG;YACrB,CAAC,CAAC,IAAI,CAAA;;6BAEO,MAAM,CAAC,YAAY;gCAChB,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;;;uBAGtC,MAAM,CAAC,IAAI,EAAE;;;SAG3B,CACF;;;;;oBAKa,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;;;;;;;;;;;oBAWhD,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;;;;;;;KAOrE,CAAC;IACJ,CAAC;;AAjGM,iBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BlB,CAAC;AA7CF;IADC,QAAQ,EAAE;8CACe;AAFf,UAAU;IADtB,aAAa,CAAC,gBAAgB,CAAC;GACnB,UAAU,CAkHtB;SAlHY,UAAU","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport {\n  simulationState,\n  Notifiable,\n  SimulationInfo,\n  Device,\n} from './device-observer.js';\n\n@customElement('ns-device-list')\nexport class DeviceList extends LitElement implements Notifiable {\n  @property()\n  deviceData: Device[] = [];\n\n  connectedCallback(): void {\n    // eslint-disable-next-line\n    super.connectedCallback();\n    simulationState.registerObserver(this);\n  }\n\n  disconnectedCallback(): void {\n    // eslint-disable-next-line\n    super.disconnectedCallback();\n    simulationState.removeObserver(this);\n  }\n\n  static styles = css`\n    :host {\n      justify-content: center;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 1rem;\n      margin: 0;\n      padding: 0;\n      list-style: none;\n    }\n\n    li {\n      border-style: solid;\n      border-color: lightgray;\n      flex-grow: 0;\n      flex-shrink: 0;\n      flex-basis: 125px;\n    }\n\n    li center {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      margin: 8px;\n    }\n\n    .box {\n      position: relative;\n      width: 80vw;\n      height: 60vh;\n      border: solid 1px rgb(198, 210, 255);\n      margin: 2.5em auto;\n    }\n  `;\n\n  onNotify(data: SimulationInfo): void {\n    this.deviceData = data.devices;\n    this.requestUpdate();\n  }\n\n  render() {\n    const rainbow = [\n      'red',\n      'orange',\n      'yellow',\n      'green',\n      'blue',\n      'indigo',\n      'purple',\n    ];\n\n    // Repeating templates with map\n    return html`\n      ${this.deviceData.map(\n        (device, idx) => html`\n          <li>\n            <center>\n              ${device.visible === true\n                ? html`<ns-cube-sprite\n                      id=${device.deviceSerial}\n                      color=${rainbow[idx % rainbow.length]}\n                      size=\"30px\"\n                      style=\"opacity:0.5;\"\n                    ></ns-cube-sprite\n                    >${device.name} `\n                : html`<ns-device-dragzone action=\"move\">\n                      <ns-cube-sprite\n                        id=${device.deviceSerial}\n                        color=${rainbow[idx % rainbow.length]}\n                        size=\"30px\"\n                      ></ns-cube-sprite> </ns-device-dragzone\n                    >${device.name}`}\n            </center>\n          </li>\n        `\n      )}\n      <li>\n        <center>\n          <ns-pyramid-sprite\n            id=\"1234\"\n            color=${rainbow[this.deviceData.length % rainbow.length]}\n            size=\"30px\"\n            style=\"opacity:0.5;\"\n          ></ns-pyramid-sprite\n          >beacon\n        </center>\n      </li>\n      <li>\n        <center>\n          <ns-pyramid-sprite\n            id=\"5678\"\n            color=${rainbow[(this.deviceData.length + 1) % rainbow.length]}\n            size=\"30px\"\n            style=\"opacity:0.5;\"\n          ></ns-pyramid-sprite\n          >anchor\n        </center>\n      </li>\n    `;\n  }\n}\n"]}