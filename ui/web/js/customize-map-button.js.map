{"version":3,"file":"customize-map-button.js","sourceRoot":"","sources":["../../ts/customize-map-button.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAGrD,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,UAAU;IAAxC;;QACO,aAAQ,GAAY,KAAK,CAAC;QAE1B,cAAS,GAAW,EAAE,CAAC;IAwFrC,CAAC;IAbC,MAAM;QACJ,OAAO,IAAI,CAAA;;kBAEG,GAAG,EAAE;YACb,MAAM,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACxD,CAAC;;oBAEW,IAAI,CAAC,QAAQ;;;;KAI5B,CAAC;IACJ,CAAC;;AArFM,sBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuElB,CAAC;AA3EU;IAAX,QAAQ,EAAE;iDAA2B;AAE1B;IAAX,QAAQ,EAAE;kDAAwB;AAHxB,eAAe;IAD3B,aAAa,CAAC,qBAAqB,CAAC;GACxB,eAAe,CA2F3B;SA3FY,eAAe","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n@customElement('ns-customize-button')\nexport class CustomizeButton extends LitElement {\n  @property() disabled: boolean = false;\n\n  @property() eventName: string = '';\n\n  static styles = css`\n    :host {\n      display: var(--lit-button-display, inline-block);\n      box-sizing: inherit;\n    }\n\n    :host(.block) {\n      --lit-button-display: block;\n      --lit-button-width: 100%;\n    }\n\n    .lit-button {\n      background-color: var(--lit-button-bg-color, transparent);\n      border: none;\n      border-radius: 0.25rem;\n      color: var(--lit-button-color, var(--white, #ffffff));\n      cursor: pointer;\n      font-weight: 400;\n      font-size: 1.2rem;\n      height: 2.5rem;\n      line-height: 1.5;\n      min-width: var(--lit-button-min-width, 10rem);\n      outline: 0;\n      padding: 0 var(--lit-button-padding-horizontal, 1rem);\n      position: relative;\n      transition: background-color 0.15s ease-in-out 0s;\n      text-align: center;\n      text-decoration: none;\n      text-transform: none;\n      user-select: none;\n      vertical-align: middle;\n      width: var(--lit-button-width, auto);\n    }\n    .lit-button-icon {\n      --lit-button-min-width: 5rem;\n      --lit-button-padding-horizontal: 0;\n    }\n\n    button[disabled],\n    button[disabled]:hover {\n      opacity: 0.65;\n      pointer-events: none;\n    }\n\n    button:focus::before {\n      content: '';\n      border-radius: 0.25rem;\n      border: 1px solid var(--white, #fff);\n      box-sizing: inherit;\n      display: block;\n      position: absolute;\n      height: calc(100% - 0.8rem);\n      top: 0.4rem;\n      left: 0.4rem;\n      visibility: visible;\n      width: calc(100% - 0.8rem);\n    }\n\n    :host(.primary) {\n      --lit-button-bg-color: var(--primary, #903d57);\n    }\n\n    :host(.primary) button:active,\n    :host(.primary) button:hover {\n      --lit-button-bg-color: var(--primary-active, #0062cc);\n    }\n\n    :host(.icon) {\n      --lit-button-min-width: 5rem;\n      --lit-button-padding-horizontal: 0;\n    }\n  `;\n\n  render() {\n    return html`\n      <button\n        @click=\"${() => {\n          window.dispatchEvent(new CustomEvent(this.eventName));\n        }}\"\n        class=\"lit-button\"\n        ?disabled=${this.disabled}\n      >\n        <slot></slot>\n      </button>\n    `;\n  }\n}\n"]}